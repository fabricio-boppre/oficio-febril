---
import InsideLayout from "@layouts/InsideLayout.astro"
import H1TitleWithLine from "@components/H1TitleWithLine.astro"
import ProcessosArtisticosNavLinks from "@components/ProcessosArtisticosNavLinks.astro"
import { css } from "@styled-system/css"
import { getCollection, render, getEntries } from "astro:content"

// Let's call getCollection() inside of getStaticPaths() to have our collection data available for building static routes.
// Then, we create the individual URL paths using the id property of each content entry.
// Each page is passed the entire collection entry as a prop for use in your page template.
export async function getStaticPaths() {
  const processosArtisticos = await getCollection("processosArtisticos")
  const staticPathsAndProps = processosArtisticos.map((processo) => {
    return {
      params: { id: processo.id },
      props: { processo },
    }
  })
  return staticPathsAndProps
}

// For a specific processo, we get meta info, related artistas and render the content in a component called `Content`:
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const { processo } = Astro.props
const artistas = (await getEntries(processo.data.artistas)).sort((a, b) =>
  a.data.nome.localeCompare(b.data.nome),
)
const { Content } = await render(processo)
---

<InsideLayout
  title={processo.data.titulo}
  description={processo.data.descricao}
  canonicalURL={canonicalURL}
>
  <H1TitleWithLine title={"processos artÃ­sticos / " + processo.data.titulo} />
  <article>
    <Content />
    <h2>Artistas</h2>
    <ul
      class={css({
        pb: "40px",
        borderBottom: "1px",
        borderBottomColor: "grayFont",
        borderBottomStyle: "solid",
      })}
    >
      {
        artistas.map((artista) => (
          <li>
            <a href={"/processos-artisticos/artista/" + artista.id}>
              {artista.data.nome}
            </a>
          </li>
        ))
      }
    </ul>
    <ProcessosArtisticosNavLinks />
  </article>
</InsideLayout>
